openapi: 3.0.3
info:
  title: Events API
  version: 1.0.0
  description: API that helps to manage user created events
paths:
  /api/v1/auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/auth/login/refresh/:
    post:
      operationId: auth_login_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/verify/:
    post:
      operationId: auth_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/v1/event/events/:
    get:
      operationId: event_events_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - event
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventPreview'
          description: ''
    post:
      operationId: event_events_create
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/event/events/{id}/:
    get:
      operationId: event_events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - event
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPreview'
          description: ''
    put:
      operationId: event_events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: event_events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: event_events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - event
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/event/me/events/:
    get:
      operationId: event_me_events_list
      tags:
      - event
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventPreview'
          description: ''
  /api/v1/event/me/registrations/:
    get:
      operationId: event_me_registrations_list
      tags:
      - event
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventPreview'
          description: ''
  /api/v1/event/me/registrations/{event_id}/:
    post:
      operationId: event_me_registrations_create
      parameters:
      - in: path
        name: event_id
        schema:
          type: integer
        required: true
      tags:
      - event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: event_me_registrations_destroy
      parameters:
      - in: path
        name: event_id
        schema:
          type: integer
        required: true
      tags:
      - event
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/user/account/:
    post:
      operationId: user_account_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonalAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonalAccount'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalAccount'
          description: ''
  /api/v1/user/account/me/:
    get:
      operationId: user_account_me_retrieve
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalAccount'
          description: ''
    put:
      operationId: user_account_me_update
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PersonalAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PersonalAccount'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalAccount'
          description: ''
    patch:
      operationId: user_account_me_partial_update
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPersonalAccount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPersonalAccount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPersonalAccount'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalAccount'
          description: ''
  /api/v1/user/manage/:
    get:
      operationId: user_manage_list
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
    post:
      operationId: user_manage_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/user/manage/{id}/:
    get:
      operationId: user_manage_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: user_manage_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: user_manage_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Event Name
          maxLength: 32
        description:
          type: string
          maxLength: 1024
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        registration_deadline:
          type: string
          format: date-time
        number_of_seats:
          type: integer
        is_published:
          type: boolean
          default: true
        created_on:
          type: string
          format: date-time
        updated_on:
          type: string
          format: date-time
      required:
      - end
      - id
      - name
      - start
    EventPreview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Event Name
          maxLength: 32
        description:
          type: string
          nullable: true
          title: Event Details
          maxLength: 1024
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        registration_deadline:
          type: string
          format: date-time
          nullable: true
        number_of_seats:
          type: integer
        is_published:
          type: boolean
        created_on:
          type: string
          format: date-time
          readOnly: true
        updated_on:
          type: string
          format: date-time
          readOnly: true
        arranged_by:
          type: integer
          nullable: true
        registrations:
          type: array
          items:
            type: integer
          readOnly: true
      required:
      - created_on
      - end
      - id
      - name
      - registrations
      - start
      - updated_on
    PatchedEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Event Name
          maxLength: 32
        description:
          type: string
          maxLength: 1024
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        registration_deadline:
          type: string
          format: date-time
        number_of_seats:
          type: integer
        is_published:
          type: boolean
          default: true
        created_on:
          type: string
          format: date-time
        updated_on:
          type: string
          format: date-time
    PatchedPersonalAccount:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 120
        last_name:
          type: string
          maxLength: 120
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
    PersonalAccount:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 120
        last_name:
          type: string
          maxLength: 120
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - email
      - first_name
      - last_login
      - last_name
      - password
      - username
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 120
        last_name:
          type: string
          maxLength: 120
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        is_active:
          type: boolean
          default: true
        is_staff:
          type: boolean
          default: false
        is_superuser:
          type: boolean
          default: false
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - email
      - first_name
      - id
      - last_login
      - last_name
      - password
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
